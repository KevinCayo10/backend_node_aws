openapi: 3.0.3
info:
  title: Customers API
  version: 1.0.0
servers:
  - url: http://localhost:3001/api/v1
paths:
  /customers:
    post:
      summary: Create customer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [name, email, phone]
              properties:
                name: { type: string }
                email: { type: string, format: email }
                phone: { type: string }
      responses:
        '201': { description: Created }
    get:
      summary: Search customers
      parameters:
        - in: query
          name: search
          schema: { type: string }
        - in: query
          name: cursor
          schema: { type: integer, minimum: 0 }
        - in: query
          name: limit
          schema: { type: integer, minimum: 1, maximum: 100 }
      responses:
        '200': { description: OK }
  /customers/{id}:
    get:
      summary: Get customer by id
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
    put:
      summary: Update customer
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name: { type: string }
                email: { type: string, format: email }
                phone: { type: string }
      responses:
        '200': { description: Updated }
    delete:
      summary: Delete customer
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: Deleted }
  /customers/internal/{id}:
    get:
      summary: Internal get for Orders API
      security:
        - serviceToken: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: integer }
      responses:
        '200': { description: OK }
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
    serviceToken:
      type: apiKey
      in: header
      name: Authorization

